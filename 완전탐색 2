#include <iostream>
#include <string>
using namespace std;

int inspect(int v[10], int answers[10]) {
    int cnt = 0;
    for (int i = 0; i < 5; i++) {
        if (answers[i] == v[i]) cnt++;
    }
    return cnt;
}

int* solution() {
    int answers[100];
    int answer[3] = { 0 };
    for (int i = 0; i < 5; i++) {
        cin >> answers[i];
    }

    int p1[10] = { 1, 2, 3, 4, 5, 1, 2, 3, 4, 5 };
    int p2[10] = { 2, 1, 2, 3, 2, 4, 2, 5, 2, 1 };
    int p3[10] = { 3, 3, 1, 1 ,2 ,2, 4, 4, 5, 5 };

    int cnt1 = inspect(p1, answers);
    int cnt2 = inspect(p2, answers);
    int cnt3 = inspect(p3, answers);
    
    if (cnt1 > cnt2 && cnt1 > cnt3) answer[0] = 1;
    else if (cnt2 > cnt1 && cnt2 > cnt3) answer[0] = 2;
    else if (cnt3 > cnt1 && cnt3 > cnt2) answer[0] = 3;
    else if (cnt1 == cnt2 && cnt1 > cnt3) {
        answer[0] = 1; 
        answer[1] = 2;
    }
    else if (cnt1 == cnt3 && cnt1 > cnt2) {
        answer[0] = 1;
        answer[1] = 3;
    }
    else if (cnt2 == cnt3 && cnt2 > cnt1) {
        answer[0] = 2;
        answer[1] = 3;
    }
    else if (cnt1 == cnt2 && cnt2 == cnt3) {
        answer[0] = 1;
        answer[1] = 2;
        answer[2] = 3;
    }

    return answer;
}
int num[10];
char path[10];
int cnt;
int used[10];
int used_path[10];

void getCnt() {
    int number = stoi(path);

    for (int i = 0; i < 10; i++) {
        if (number == used_path[i]) return;
    }

    if (number == 0) return;
    if (number == 1) return;
    int i = 2;
    while (1) {
        if (i == number){
            break;
        }
        if (number % i == 0) return;
        else i++;
    }
    used_path[cnt] = number;
    cnt++;
}

void run(int level, int n, string numbers) {
    if (level == n) {
        return;
    }

    for (int i = 0; i < n; i++) {
        if (used[i] == 1) continue;
        path[level] = numbers[i];
        used[i] = 1;
        getCnt();
        run(level + 1, n, numbers);
        used[i] = 0;
        path[level] = 0;
    }
}

int solution(string numbers) {
    int answer = 0;
    int n = numbers.length();

    run(0, n, numbers);

    answer = cnt;

    return answer;
}

int main()
{
    cout << solution("011");
   

	return 0;
}
